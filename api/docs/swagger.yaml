definitions:
  models.PostRequest:
    properties:
      body:
        type: string
      title:
        type: string
      user_id:
        type: integer
    type: object
  models.Response:
    properties:
      code:
        type: integer
      data: {}
      error: {}
      message:
        type: string
    type: object
  models.UserRequest:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        type: string
      user_name:
        type: string
    type: object
info:
  contact: {}
paths:
  /post/:
    get:
      consumes:
      - application/json
      description: GetPosts Post
      operationId: get_posts
      parameters:
      - description: page
        in: query
        name: page
        type: integer
      - description: per_page
        in: query
        name: per_page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Posts
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  type: object
              type: object
      summary: GetPosts Post
      tags:
      - Post
    post:
      consumes:
      - application/json
      description: Create Post
      operationId: create_post
      parameters:
      - description: post
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/models.PostRequest'
      produces:
      - application/json
      responses:
        "201":
          description: post created
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  type: object
              type: object
      summary: Create Post
      tags:
      - Post
  /post/{id}:
    delete:
      consumes:
      - application/json
      description: DeletePost Post
      operationId: delete_post
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Post
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  type: object
              type: object
      summary: DeletePost Post
      tags:
      - Post
    get:
      consumes:
      - application/json
      description: GetPostByID Post
      operationId: get_post_by_id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Post
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  type: object
              type: object
      summary: GetPostByID Post
      tags:
      - Post
    put:
      consumes:
      - application/json
      description: UpdatePost Post
      operationId: update_post
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: post
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/models.PostRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Post
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  type: object
              type: object
      summary: UpdatePost Post
      tags:
      - Post
  /post/user/{id}:
    get:
      consumes:
      - application/json
      description: GetPostByUserID Post
      operationId: get_post_by_user_id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: page
        in: query
        name: page
        type: integer
      - description: per_page
        in: query
        name: per_page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Posts
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  type: object
              type: object
      summary: GetPostByUserID Post
      tags:
      - Post
  /user/:
    get:
      consumes:
      - application/json
      description: GetUsers User
      operationId: get_users
      parameters:
      - description: page
        in: query
        name: page
        type: integer
      - description: per_page
        in: query
        name: per_page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Users
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  type: object
              type: object
      summary: GetUsers User
      tags:
      - User
    post:
      consumes:
      - application/json
      description: Create User
      operationId: create_user
      parameters:
      - description: user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: user created
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  type: object
              type: object
      summary: Create User
      tags:
      - User
  /user/{id}:
    delete:
      consumes:
      - application/json
      description: DeleteUser User
      operationId: delete_user
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: User
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  type: object
              type: object
      summary: DeleteUser User
      tags:
      - User
    put:
      consumes:
      - application/json
      description: UpdateUser User
      operationId: update_user
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: User
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  type: object
              type: object
      summary: UpdateUser User
      tags:
      - User
  /user/email/{email}:
    get:
      consumes:
      - application/json
      description: GetUserByEmail User
      operationId: get_user_by_email
      parameters:
      - description: email
        in: path
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: user
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  type: object
              type: object
      summary: GetUserByEmail User
      tags:
      - User
  /user/id/{id}:
    get:
      consumes:
      - application/json
      description: GetUserByID User
      operationId: get_user_by_id
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: user
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  type: object
              type: object
      summary: GetUserByID User
      tags:
      - User
  /user/username/{username}:
    get:
      consumes:
      - application/json
      description: GetUserByUserName User
      operationId: get_user_by_username
      parameters:
      - description: username
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: user
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: Not Found
          schema:
            allOf:
            - $ref: '#/definitions/models.Response'
            - properties:
                data:
                  type: object
              type: object
      summary: GetUserByUserName User
      tags:
      - User
swagger: "2.0"
